// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ehealthcare.Model;

namespace HospitalLibrary.Migrations
{
    [DbContext(typeof(HospitalDbContext))]
<<<<<<< HEAD:Hospital/HospitalLibrary/Migrations/20211118015012_FloorsAndRooms.Designer.cs
    [Migration("20211118015012_FloorsAndRooms")]
    partial class FloorsAndRooms
=======
    [Migration("20211117230605_PatientMigration")]
    partial class PatientMigration
>>>>>>> 287beda (feat: added new relations in database needed for patient registration):Hospital/HospitalLibrary/Migrations/20211117230605_PatientMigration.Designer.cs
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("HospitalLibrary.FeedbackAndSurvey.Model.PatientFeedback", b =>
<<<<<<< HEAD:Hospital/HospitalLibrary/Migrations/20211118015012_FloorsAndRooms.Designer.cs
=======
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Anonymous")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPublished")
                        .HasColumnType("boolean");

                    b.Property<string>("PatientUsername")
                        .HasColumnType("text");

                    b.Property<bool>("PublishAllowed")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("SubmissionDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Text")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("PatientFeedbacks");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            Anonymous = false,
                            IsPublished = false,
                            PatientUsername = "p1",
                            PublishAllowed = false,
                            SubmissionDate = new DateTime(2021, 11, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Text = "alallalal"
                        },
                        new
                        {
                            Id = 1,
                            Anonymous = false,
                            IsPublished = false,
                            PatientUsername = "imbiamba",
                            PublishAllowed = false,
                            SubmissionDate = new DateTime(2021, 11, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Text = "alallalal"
                        });
                });

            modelBuilder.Entity("HospitalLibrary.GraphicalEditor.Model.ExteriorGraphic", b =>
>>>>>>> 287beda (feat: added new relations in database needed for patient registration):Hospital/HospitalLibrary/Migrations/20211117230605_PatientMigration.Designer.cs
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Anonymous")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPublished")
                        .HasColumnType("boolean");

                    b.Property<string>("PatientUsername")
                        .HasColumnType("text");

                    b.Property<bool>("PublishAllowed")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("SubmissionDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Text")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("PatientFeedbacks");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            Anonymous = false,
                            IsPublished = false,
                            PatientUsername = "p1",
                            PublishAllowed = false,
                            SubmissionDate = new DateTime(2021, 11, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Text = "alallalal"
                        });
                });

            modelBuilder.Entity("HospitalLibrary.GraphicalEditor.Model.ExteriorGraphic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<double>("Height")
                        .HasColumnType("double precision");

                    b.Property<int>("IdElement")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Type")
                        .HasColumnType("text");

                    b.Property<double>("Width")
                        .HasColumnType("double precision");

                    b.Property<double>("X")
                        .HasColumnType("double precision");

                    b.Property<double>("Y")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.ToTable("ExteriorGraphic");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Height = 200.0,
                            IdElement = 0,
                            Name = "ZGR1",
                            Type = "building",
                            Width = 100.0,
                            X = 180.0,
                            Y = 30.0
                        },
                        new
                        {
                            Id = 2,
                            Height = 110.0,
                            IdElement = 1,
                            Name = "ZGR2",
                            Type = "building",
                            Width = 180.0,
                            X = 380.0,
                            Y = 120.0
                        },
                        new
                        {
                            Id = 7,
                            Height = 50.0,
                            IdElement = -1,
                            Name = "",
                            Type = "road",
                            Width = 600.0,
                            X = 0.0,
                            Y = 250.0
<<<<<<< HEAD:Hospital/HospitalLibrary/Migrations/20211118015012_FloorsAndRooms.Designer.cs
                        },
                        new
                        {
                            Id = 3,
                            Height = 110.0,
                            IdElement = -1,
                            Name = "",
                            Type = "road",
                            Width = 50.0,
                            X = 0.0,
                            Y = 290.0
                        },
                        new
                        {
                            Id = 4,
                            Height = 400.0,
                            IdElement = -1,
                            Name = "",
                            Type = "road",
                            Width = 50.0,
                            X = 305.0,
                            Y = 0.0
                        },
                        new
                        {
                            Id = 5,
                            Height = 80.0,
                            IdElement = -1,
                            Name = "P",
                            Type = "parking",
                            Width = 50.0,
                            X = 245.0,
                            Y = 310.0
                        },
                        new
                        {
                            Id = 6,
                            Height = 80.0,
                            IdElement = -1,
                            Name = "P",
                            Type = "parking",
                            Width = 50.0,
                            X = 380.0,
                            Y = 20.0
=======
>>>>>>> 287beda (feat: added new relations in database needed for patient registration):Hospital/HospitalLibrary/Migrations/20211117230605_PatientMigration.Designer.cs
                        });
                });

            modelBuilder.Entity("HospitalLibrary.GraphicalEditor.Model.FloorGraphic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("BuildingId")
                        .HasColumnType("integer");

                    b.Property<long>("Floor")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("FloorGraphics");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BuildingId = 0,
                            Floor = 0L
                        },
                        new
                        {
                            Id = 2,
                            BuildingId = 0,
                            Floor = 1L
                        });
                });

<<<<<<< HEAD:Hospital/HospitalLibrary/Migrations/20211118015012_FloorsAndRooms.Designer.cs
            modelBuilder.Entity("ehealthcare.Model.Room", b =>
=======
            modelBuilder.Entity("HospitalLibrary.Model.PatientAllergen", b =>
>>>>>>> 287beda (feat: added new relations in database needed for patient registration):Hospital/HospitalLibrary/Migrations/20211117230605_PatientMigration.Designer.cs
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

<<<<<<< HEAD:Hospital/HospitalLibrary/Migrations/20211118015012_FloorsAndRooms.Designer.cs
=======
                    b.Property<int>("AllergenId")
                        .HasColumnType("integer");

                    b.Property<int>("MedicalRecordId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("PatientAllergens");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AllergenId = 1,
                            MedicalRecordId = 1
                        });
                });

            modelBuilder.Entity("ehealthcare.Model.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("CityId")
                        .HasColumnType("integer");

                    b.Property<string>("HomeAddress")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("Addresses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CityId = 1,
                            HomeAddress = "Sime Milutinovica, 2"
                        });
                });

            modelBuilder.Entity("ehealthcare.Model.Allergen", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("Type")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Allergens");

                    b.HasData(
                        new
                        {
                            Id = "1",
                            Type = "macija dlaka"
                        });
                });

            modelBuilder.Entity("ehealthcare.Model.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("CountryId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("PostalCode")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CountryId = 1,
                            Name = "Novi Sad",
                            PostalCode = "21000"
                        });
                });

            modelBuilder.Entity("ehealthcare.Model.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Code")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "21000",
                            Name = "Srbija"
                        });
                });

            modelBuilder.Entity("ehealthcare.Model.MedicalPermit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("DoctorId")
                        .HasColumnType("text");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("PatientId")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("DoctorId");

                    b.HasIndex("PatientId");

                    b.ToTable("MedicalPermits");
                });

            modelBuilder.Entity("ehealthcare.Model.MedicalRecord", b =>
                {
                    b.Property<string>("PatientId")
                        .HasColumnType("text");

                    b.Property<int>("BloodType")
                        .HasColumnType("integer");

                    b.Property<string>("DoctorId")
                        .HasColumnType("text");

                    b.Property<int>("Height")
                        .HasColumnType("integer");

                    b.Property<string>("PersonalDoctorId")
                        .HasColumnType("text");

                    b.Property<string>("PersonalId")
                        .HasColumnType("text");

                    b.Property<string>("Profession")
                        .HasColumnType("text");

                    b.Property<int>("Weight")
                        .HasColumnType("integer");

                    b.HasKey("PatientId");

                    b.HasIndex("PersonalDoctorId");

                    b.ToTable("MedicalRecords");

                    b.HasData(
                        new
                        {
                            PatientId = "imbiamba",
                            BloodType = 1,
                            DoctorId = "1",
                            Height = 186,
                            PersonalId = "1209001129123",
                            Profession = "Professor",
                            Weight = 90
                        });
                });

            modelBuilder.Entity("ehealthcare.Model.Room", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

>>>>>>> 287beda (feat: added new relations in database needed for patient registration):Hospital/HospitalLibrary/Migrations/20211117230605_PatientMigration.Designer.cs
                    b.Property<int>("Floor")
                        .HasColumnType("integer");

                    b.Property<bool>("IsRenovated")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("IsRenovatedUntill")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("NumOfTakenBeds")
                        .HasColumnType("integer");

                    b.Property<int>("RoomType")
                        .HasColumnType("integer");

                    b.Property<string>("Sector")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            Id = 16,
                            Floor = 0,
                            IsRenovated = false,
                            IsRenovatedUntill = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Counter 1",
                            NumOfTakenBeds = 0,
                            RoomType = 4,
                            Sector = "CS"
                        },
                        new
                        {
                            Id = 1,
                            Floor = 0,
                            IsRenovated = false,
                            IsRenovatedUntill = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Counter 2",
                            NumOfTakenBeds = 0,
                            RoomType = 4,
                            Sector = "CS"
                        },
                        new
                        {
                            Id = 2,
                            Floor = 0,
                            IsRenovated = false,
                            IsRenovatedUntill = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Examination room 1",
                            NumOfTakenBeds = 1,
                            RoomType = 0,
                            Sector = "ES"
                        },
                        new
                        {
                            Id = 3,
                            Floor = 0,
                            IsRenovated = false,
                            IsRenovatedUntill = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Examination room 2",
                            NumOfTakenBeds = 1,
                            RoomType = 0,
                            Sector = "ES"
                        },
                        new
                        {
                            Id = 4,
                            Floor = 0,
                            IsRenovated = false,
                            IsRenovatedUntill = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Restroom 1",
                            NumOfTakenBeds = 0,
                            RoomType = 3,
                            Sector = "RRS"
                        },
                        new
                        {
                            Id = 5,
                            Floor = 0,
                            IsRenovated = false,
                            IsRenovatedUntill = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Restroom 2",
                            NumOfTakenBeds = 0,
                            RoomType = 3,
                            Sector = "RRS"
                        },
                        new
                        {
                            Id = 6,
                            Floor = 0,
                            IsRenovated = false,
                            IsRenovatedUntill = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Waiting room 1",
                            NumOfTakenBeds = 0,
                            RoomType = 5,
                            Sector = "WS"
                        },
                        new
                        {
                            Id = 7,
                            Floor = 1,
                            IsRenovated = false,
                            IsRenovatedUntill = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Operation room 1",
                            NumOfTakenBeds = 0,
                            RoomType = 1,
                            Sector = "OS"
                        },
                        new
                        {
                            Id = 8,
                            Floor = 1,
                            IsRenovated = false,
                            IsRenovatedUntill = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Operation room 2",
                            NumOfTakenBeds = 0,
                            RoomType = 1,
                            Sector = "OS"
                        },
                        new
                        {
                            Id = 9,
                            Floor = 1,
                            IsRenovated = false,
                            IsRenovatedUntill = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Operation room 3",
                            NumOfTakenBeds = 0,
                            RoomType = 1,
                            Sector = "OS"
                        },
                        new
                        {
                            Id = 10,
                            Floor = 1,
                            IsRenovated = false,
                            IsRenovatedUntill = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Operation room 4",
                            NumOfTakenBeds = 0,
                            RoomType = 1,
                            Sector = "OS"
                        },
                        new
                        {
                            Id = 11,
                            Floor = 1,
                            IsRenovated = false,
                            IsRenovatedUntill = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Examination room 3",
                            NumOfTakenBeds = 0,
                            RoomType = 0,
                            Sector = "ES"
                        },
                        new
                        {
                            Id = 12,
                            Floor = 1,
                            IsRenovated = false,
                            IsRenovatedUntill = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Examination room 4",
                            NumOfTakenBeds = 0,
                            RoomType = 0,
                            Sector = "ES"
                        },
                        new
                        {
                            Id = 13,
                            Floor = 1,
                            IsRenovated = false,
                            IsRenovatedUntill = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Restroom 3",
                            NumOfTakenBeds = 0,
                            RoomType = 3,
                            Sector = "RRS"
                        },
                        new
                        {
                            Id = 14,
                            Floor = 1,
                            IsRenovated = false,
                            IsRenovatedUntill = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Restroom 4",
                            NumOfTakenBeds = 0,
                            RoomType = 3,
                            Sector = "RRS"
                        },
                        new
                        {
                            Id = 15,
                            Floor = 1,
                            IsRenovated = false,
                            IsRenovatedUntill = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Waiting room 2",
                            NumOfTakenBeds = 0,
                            RoomType = 5,
                            Sector = "WS"
                        });
                });

            modelBuilder.Entity("ehealthcare.Model.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<int>("AddressId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("Gender")
                        .HasColumnType("text");

                    b.Property<bool>("IsActivated")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsBlocked")
                        .HasColumnType("boolean");

                    b.Property<int>("LoginType")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("ParentName")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .HasColumnType("text");

                    b.Property<string>("Surname")
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.ToTable("Users");

                    b.HasDiscriminator<string>("Discriminator").HasValue("User");
                });

            modelBuilder.Entity("ehealthcare.Model.Doctor", b =>
                {
                    b.HasBaseType("ehealthcare.Model.User");

                    b.Property<int>("Specialization")
                        .HasColumnType("integer");

                    b.Property<int>("UsedOffDays")
                        .HasColumnType("integer");

                    b.ToTable("Doctors");

                    b.HasDiscriminator().HasValue("Doctor");

                    b.HasData(
                        new
                        {
                            Id = "nelex",
                            AddressId = 1,
                            DateOfBirth = new DateTime(1999, 7, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "nemanjar@gmail.com",
                            Gender = "male",
                            IsActivated = false,
                            IsBlocked = false,
                            LoginType = 2,
                            Name = "Nemanja",
                            ParentName = "Zoran",
                            Password = "najjacapecurka",
                            Phone = "019919199191",
                            Surname = "Radojcic",
                            Username = "nelex",
                            Specialization = 0,
                            UsedOffDays = 12
                        });
                });

            modelBuilder.Entity("ehealthcare.Model.Patient", b =>
                {
                    b.HasBaseType("ehealthcare.Model.User");

                    b.Property<int>("MedicalRecordId")
                        .HasColumnType("integer");

                    b.ToTable("Patients");

                    b.HasDiscriminator().HasValue("Patient");

                    b.HasData(
                        new
                        {
                            Id = "imbiamba",
                            AddressId = 1,
                            DateOfBirth = new DateTime(2001, 11, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "markoilic@gmail.com",
                            Gender = "male",
                            IsActivated = false,
                            IsBlocked = false,
                            LoginType = 0,
                            Name = "Marko",
                            ParentName = "Milan",
                            Password = "pecurkaa",
                            Phone = "019919199191",
                            Surname = "Ilic",
                            Username = "imbiamba",
                            MedicalRecordId = 1
                        });
                });

            modelBuilder.Entity("HospitalLibrary.GraphicalEditor.Model.FloorGraphic", b =>
                {
                    b.OwnsMany("ehealthcare.Model.RoomGraphic", "RoomGraphics", b1 =>
                        {
<<<<<<< HEAD:Hospital/HospitalLibrary/Migrations/20211118015012_FloorsAndRooms.Designer.cs
                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer")
                                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);
=======
                            b1.Property<string>("Id")
                                .HasColumnType("text");
>>>>>>> 287beda (feat: added new relations in database needed for patient registration):Hospital/HospitalLibrary/Migrations/20211117230605_PatientMigration.Designer.cs

                            b1.Property<string>("DoorPosition")
                                .HasColumnType("text");

<<<<<<< HEAD:Hospital/HospitalLibrary/Migrations/20211118015012_FloorsAndRooms.Designer.cs
                            b1.Property<int>("FloorGraphicId")
                                .HasColumnType("integer");
=======
                            b1.Property<string>("FloorGraphicId")
                                .IsRequired()
                                .HasColumnType("text");
>>>>>>> 287beda (feat: added new relations in database needed for patient registration):Hospital/HospitalLibrary/Migrations/20211117230605_PatientMigration.Designer.cs

                            b1.Property<int>("Height")
                                .HasColumnType("integer");

                            b1.Property<int>("RoomId")
                                .HasColumnType("integer");

                            b1.Property<int>("Width")
                                .HasColumnType("integer");

                            b1.Property<int>("X")
                                .HasColumnType("integer");

                            b1.Property<int>("Y")
                                .HasColumnType("integer");

                            b1.HasKey("Id");

                            b1.HasIndex("FloorGraphicId");

                            b1.HasIndex("RoomId");

                            b1.ToTable("RoomGraphics");

                            b1.WithOwner()
                                .HasForeignKey("FloorGraphicId");

                            b1.HasOne("ehealthcare.Model.Room", "Room")
                                .WithMany()
                                .HasForeignKey("RoomId")
                                .OnDelete(DeleteBehavior.Cascade)
                                .IsRequired();

                            b1.HasData(
                                new
                                {
<<<<<<< HEAD:Hospital/HospitalLibrary/Migrations/20211118015012_FloorsAndRooms.Designer.cs
                                    Id = 16,
                                    DoorPosition = "right",
                                    FloorGraphicId = 1,
=======
                                    Id = "0",
                                    DoorPosition = "right",
                                    FloorGraphicId = "0",
>>>>>>> 287beda (feat: added new relations in database needed for patient registration):Hospital/HospitalLibrary/Migrations/20211117230605_PatientMigration.Designer.cs
                                    Height = 100,
                                    RoomId = 16,
                                    Width = 100,
                                    X = 0,
                                    Y = 0
                                },
                                new
                                {
<<<<<<< HEAD:Hospital/HospitalLibrary/Migrations/20211118015012_FloorsAndRooms.Designer.cs
                                    Id = 1,
                                    DoorPosition = "right",
                                    FloorGraphicId = 1,
=======
                                    Id = "1",
                                    DoorPosition = "right",
                                    FloorGraphicId = "0",
>>>>>>> 287beda (feat: added new relations in database needed for patient registration):Hospital/HospitalLibrary/Migrations/20211117230605_PatientMigration.Designer.cs
                                    Height = 100,
                                    RoomId = 1,
                                    Width = 100,
                                    X = 0,
                                    Y = 100
                                },
                                new
                                {
<<<<<<< HEAD:Hospital/HospitalLibrary/Migrations/20211118015012_FloorsAndRooms.Designer.cs
                                    Id = 2,
                                    DoorPosition = "right",
                                    FloorGraphicId = 1,
=======
                                    Id = "2",
                                    DoorPosition = "right",
                                    FloorGraphicId = "0",
>>>>>>> 287beda (feat: added new relations in database needed for patient registration):Hospital/HospitalLibrary/Migrations/20211117230605_PatientMigration.Designer.cs
                                    Height = 145,
                                    RoomId = 2,
                                    Width = 75,
                                    X = 0,
                                    Y = 340
                                },
                                new
                                {
<<<<<<< HEAD:Hospital/HospitalLibrary/Migrations/20211118015012_FloorsAndRooms.Designer.cs
                                    Id = 3,
                                    DoorPosition = "left",
                                    FloorGraphicId = 1,
=======
                                    Id = "3",
                                    DoorPosition = "left",
                                    FloorGraphicId = "0",
>>>>>>> 287beda (feat: added new relations in database needed for patient registration):Hospital/HospitalLibrary/Migrations/20211117230605_PatientMigration.Designer.cs
                                    Height = 145,
                                    RoomId = 3,
                                    Width = 75,
                                    X = 222,
                                    Y = 340
                                },
                                new
                                {
<<<<<<< HEAD:Hospital/HospitalLibrary/Migrations/20211118015012_FloorsAndRooms.Designer.cs
                                    Id = 4,
                                    DoorPosition = "top",
                                    FloorGraphicId = 1,
=======
                                    Id = "4",
                                    DoorPosition = "top",
                                    FloorGraphicId = "0",
>>>>>>> 287beda (feat: added new relations in database needed for patient registration):Hospital/HospitalLibrary/Migrations/20211117230605_PatientMigration.Designer.cs
                                    Height = 80,
                                    RoomId = 4,
                                    Width = 147,
                                    X = 0,
                                    Y = 517
                                },
                                new
                                {
<<<<<<< HEAD:Hospital/HospitalLibrary/Migrations/20211118015012_FloorsAndRooms.Designer.cs
                                    Id = 5,
                                    DoorPosition = "top",
                                    FloorGraphicId = 1,
=======
                                    Id = "5",
                                    DoorPosition = "top",
                                    FloorGraphicId = "0",
>>>>>>> 287beda (feat: added new relations in database needed for patient registration):Hospital/HospitalLibrary/Migrations/20211117230605_PatientMigration.Designer.cs
                                    Height = 80,
                                    RoomId = 5,
                                    Width = 147,
                                    X = 150,
                                    Y = 517
                                },
                                new
                                {
<<<<<<< HEAD:Hospital/HospitalLibrary/Migrations/20211118015012_FloorsAndRooms.Designer.cs
                                    Id = 6,
                                    DoorPosition = "none",
                                    FloorGraphicId = 1,
=======
                                    Id = "6",
                                    DoorPosition = "none",
                                    FloorGraphicId = "0",
>>>>>>> 287beda (feat: added new relations in database needed for patient registration):Hospital/HospitalLibrary/Migrations/20211117230605_PatientMigration.Designer.cs
                                    Height = 160,
                                    RoomId = 6,
                                    Width = 140,
                                    X = 150,
                                    Y = 20
                                },
                                new
                                {
<<<<<<< HEAD:Hospital/HospitalLibrary/Migrations/20211118015012_FloorsAndRooms.Designer.cs
                                    Id = 7,
                                    DoorPosition = "right",
                                    FloorGraphicId = 2,
=======
                                    Id = "7",
                                    DoorPosition = "right",
                                    FloorGraphicId = "1",
>>>>>>> 287beda (feat: added new relations in database needed for patient registration):Hospital/HospitalLibrary/Migrations/20211117230605_PatientMigration.Designer.cs
                                    Height = 100,
                                    RoomId = 7,
                                    Width = 100,
                                    X = 0,
                                    Y = 0
                                },
                                new
                                {
<<<<<<< HEAD:Hospital/HospitalLibrary/Migrations/20211118015012_FloorsAndRooms.Designer.cs
                                    Id = 8,
                                    DoorPosition = "left",
                                    FloorGraphicId = 2,
=======
                                    Id = "8",
                                    DoorPosition = "left",
                                    FloorGraphicId = "1",
>>>>>>> 287beda (feat: added new relations in database needed for patient registration):Hospital/HospitalLibrary/Migrations/20211117230605_PatientMigration.Designer.cs
                                    Height = 100,
                                    RoomId = 8,
                                    Width = 100,
                                    X = 197,
                                    Y = 0
                                },
                                new
                                {
<<<<<<< HEAD:Hospital/HospitalLibrary/Migrations/20211118015012_FloorsAndRooms.Designer.cs
                                    Id = 9,
                                    DoorPosition = "right",
                                    FloorGraphicId = 2,
=======
                                    Id = "9",
                                    DoorPosition = "right",
                                    FloorGraphicId = "1",
>>>>>>> 287beda (feat: added new relations in database needed for patient registration):Hospital/HospitalLibrary/Migrations/20211117230605_PatientMigration.Designer.cs
                                    Height = 100,
                                    RoomId = 9,
                                    Width = 100,
                                    X = 0,
                                    Y = 100
                                },
                                new
                                {
<<<<<<< HEAD:Hospital/HospitalLibrary/Migrations/20211118015012_FloorsAndRooms.Designer.cs
                                    Id = 10,
                                    DoorPosition = "left",
                                    FloorGraphicId = 2,
=======
                                    Id = "10",
                                    DoorPosition = "left",
                                    FloorGraphicId = "1",
>>>>>>> 287beda (feat: added new relations in database needed for patient registration):Hospital/HospitalLibrary/Migrations/20211117230605_PatientMigration.Designer.cs
                                    Height = 100,
                                    RoomId = 10,
                                    Width = 100,
                                    X = 197,
                                    Y = 100
                                },
                                new
                                {
<<<<<<< HEAD:Hospital/HospitalLibrary/Migrations/20211118015012_FloorsAndRooms.Designer.cs
                                    Id = 11,
                                    DoorPosition = "right",
                                    FloorGraphicId = 2,
=======
                                    Id = "11",
                                    DoorPosition = "right",
                                    FloorGraphicId = "1",
>>>>>>> 287beda (feat: added new relations in database needed for patient registration):Hospital/HospitalLibrary/Migrations/20211117230605_PatientMigration.Designer.cs
                                    Height = 145,
                                    RoomId = 11,
                                    Width = 75,
                                    X = 0,
                                    Y = 340
                                },
                                new
                                {
<<<<<<< HEAD:Hospital/HospitalLibrary/Migrations/20211118015012_FloorsAndRooms.Designer.cs
                                    Id = 12,
                                    DoorPosition = "left",
                                    FloorGraphicId = 2,
=======
                                    Id = "12",
                                    DoorPosition = "left",
                                    FloorGraphicId = "1",
>>>>>>> 287beda (feat: added new relations in database needed for patient registration):Hospital/HospitalLibrary/Migrations/20211117230605_PatientMigration.Designer.cs
                                    Height = 145,
                                    RoomId = 12,
                                    Width = 75,
                                    X = 222,
                                    Y = 340
                                },
                                new
                                {
<<<<<<< HEAD:Hospital/HospitalLibrary/Migrations/20211118015012_FloorsAndRooms.Designer.cs
                                    Id = 13,
                                    DoorPosition = "top",
                                    FloorGraphicId = 2,
=======
                                    Id = "13",
                                    DoorPosition = "top",
                                    FloorGraphicId = "1",
>>>>>>> 287beda (feat: added new relations in database needed for patient registration):Hospital/HospitalLibrary/Migrations/20211117230605_PatientMigration.Designer.cs
                                    Height = 80,
                                    RoomId = 13,
                                    Width = 147,
                                    X = 0,
                                    Y = 517
                                },
                                new
                                {
<<<<<<< HEAD:Hospital/HospitalLibrary/Migrations/20211118015012_FloorsAndRooms.Designer.cs
                                    Id = 14,
                                    DoorPosition = "top",
                                    FloorGraphicId = 2,
=======
                                    Id = "14",
                                    DoorPosition = "top",
                                    FloorGraphicId = "1",
>>>>>>> 287beda (feat: added new relations in database needed for patient registration):Hospital/HospitalLibrary/Migrations/20211117230605_PatientMigration.Designer.cs
                                    Height = 80,
                                    RoomId = 14,
                                    Width = 147,
                                    X = 150,
                                    Y = 517
                                },
                                new
                                {
<<<<<<< HEAD:Hospital/HospitalLibrary/Migrations/20211118015012_FloorsAndRooms.Designer.cs
                                    Id = 15,
                                    DoorPosition = "none",
                                    FloorGraphicId = 2,
=======
                                    Id = "15",
                                    DoorPosition = "none",
                                    FloorGraphicId = "1",
>>>>>>> 287beda (feat: added new relations in database needed for patient registration):Hospital/HospitalLibrary/Migrations/20211117230605_PatientMigration.Designer.cs
                                    Height = 100,
                                    RoomId = 15,
                                    Width = 140,
                                    X = 10,
                                    Y = 220
                                });
                        });
                });

            modelBuilder.Entity("ehealthcare.Model.Address", b =>
                {
                    b.HasOne("ehealthcare.Model.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ehealthcare.Model.City", b =>
                {
                    b.HasOne("ehealthcare.Model.Country", "Country")
                        .WithMany("Cities")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ehealthcare.Model.MedicalPermit", b =>
                {
                    b.HasOne("ehealthcare.Model.Doctor", "Doctor")
                        .WithMany()
                        .HasForeignKey("DoctorId");

                    b.HasOne("ehealthcare.Model.Patient", null)
                        .WithMany("MedicalPermit")
                        .HasForeignKey("PatientId");
                });

            modelBuilder.Entity("ehealthcare.Model.MedicalRecord", b =>
                {
                    b.HasOne("ehealthcare.Model.Patient", "Patient")
                        .WithOne("Medical")
                        .HasForeignKey("ehealthcare.Model.MedicalRecord", "PatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ehealthcare.Model.Doctor", "PersonalDoctor")
                        .WithMany()
                        .HasForeignKey("PersonalDoctorId");
                });

            modelBuilder.Entity("ehealthcare.Model.User", b =>
                {
                    b.HasOne("ehealthcare.Model.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
